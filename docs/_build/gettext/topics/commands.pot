# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008â€“2018, Scrapy developers
# This file is distributed under the same license as the Scrapy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Scrapy \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-09-10 09:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../topics/commands.rst:5
msgid "Command line tool"
msgstr ""

#: ../../topics/commands.rst:9
msgid "Scrapy is controlled through the ``scrapy`` command-line tool, to be referred here as the \"Scrapy tool\" to differentiate it from the sub-commands, which we just call \"commands\" or \"Scrapy commands\"."
msgstr ""

#: ../../topics/commands.rst:13
msgid "The Scrapy tool provides several commands, for multiple purposes, and each one accepts a different set of arguments and options."
msgstr ""

#: ../../topics/commands.rst:16
msgid "(The ``scrapy deploy`` command has been removed in 1.0 in favor of the standalone ``scrapyd-deploy``. See `Deploying your project`_.)"
msgstr ""

#: ../../topics/commands.rst:22
msgid "Configuration settings"
msgstr ""

#: ../../topics/commands.rst:24
msgid "Scrapy will look for configuration parameters in ini-style ``scrapy.cfg`` files in standard locations:"
msgstr ""

#: ../../topics/commands.rst:27
msgid "``/etc/scrapy.cfg`` or ``c:\\scrapy\\scrapy.cfg`` (system-wide),"
msgstr ""

#: ../../topics/commands.rst:28
msgid "``~/.config/scrapy.cfg`` (``$XDG_CONFIG_HOME``) and ``~/.scrapy.cfg`` (``$HOME``) for global (user-wide) settings, and"
msgstr ""

#: ../../topics/commands.rst:30
msgid "``scrapy.cfg`` inside a scrapy project's root (see next section)."
msgstr ""

#: ../../topics/commands.rst:32
msgid "Settings from these files are merged in the listed order of preference: user-defined values have higher priority than system-wide defaults and project-wide settings will override all others, when defined."
msgstr ""

#: ../../topics/commands.rst:36
msgid "Scrapy also understands, and can be configured through, a number of environment variables. Currently these are:"
msgstr ""

#: ../../topics/commands.rst:39
msgid "``SCRAPY_SETTINGS_MODULE`` (see :ref:`topics-settings-module-envvar`)"
msgstr ""

#: ../../topics/commands.rst:40
msgid "``SCRAPY_PROJECT`` (see :ref:`topics-project-envvar`)"
msgstr ""

#: ../../topics/commands.rst:41
msgid "``SCRAPY_PYTHON_SHELL`` (see :ref:`topics-shell`)"
msgstr ""

#: ../../topics/commands.rst:46
msgid "Default structure of Scrapy projects"
msgstr ""

#: ../../topics/commands.rst:48
msgid "Before delving into the command-line tool and its sub-commands, let's first understand the directory structure of a Scrapy project."
msgstr ""

#: ../../topics/commands.rst:51
msgid "Though it can be modified, all Scrapy projects have the same file structure by default, similar to this::"
msgstr ""

#: ../../topics/commands.rst:67
msgid "The directory where the ``scrapy.cfg`` file resides is known as the *project root directory*. That file contains the name of the python module that defines the project settings. Here is an example::"
msgstr ""

#: ../../topics/commands.rst:77
msgid "Sharing the root directory between projects"
msgstr ""

#: ../../topics/commands.rst:79
msgid "A project root directory, the one that contains the ``scrapy.cfg``, may be shared by multiple Scrapy projects, each with its own settings module."
msgstr ""

#: ../../topics/commands.rst:82
msgid "In that case, you must define one or more aliases for those settings modules under ``[settings]`` in your ``scrapy.cfg`` file::"
msgstr ""

#: ../../topics/commands.rst:90
msgid "By default, the ``scrapy`` command-line tool will use the ``default`` settings. Use the ``SCRAPY_PROJECT`` environment variable to specify a different project for ``scrapy`` to use::"
msgstr ""

#: ../../topics/commands.rst:102
msgid "Using the ``scrapy`` tool"
msgstr ""

#: ../../topics/commands.rst:104
msgid "You can start by running the Scrapy tool with no arguments and it will print some usage help and the available commands::"
msgstr ""

#: ../../topics/commands.rst:117
msgid "The first line will print the currently active project if you're inside a Scrapy project. In this example it was run from outside a project. If run from inside a project it would have printed something like this::"
msgstr ""

#: ../../topics/commands.rst:129
msgid "Creating projects"
msgstr ""

#: ../../topics/commands.rst:131
msgid "The first thing you typically do with the ``scrapy`` tool is create your Scrapy project::"
msgstr ""

#: ../../topics/commands.rst:136
msgid "That will create a Scrapy project under the ``project_dir`` directory. If ``project_dir`` wasn't specified, ``project_dir`` will be the same as ``myproject``."
msgstr ""

#: ../../topics/commands.rst:139
msgid "Next, you go inside the new project directory::"
msgstr ""

#: ../../topics/commands.rst:143
msgid "And you're ready to use the ``scrapy`` command to manage and control your project from there."
msgstr ""

#: ../../topics/commands.rst:147
msgid "Controlling projects"
msgstr ""

#: ../../topics/commands.rst:149
msgid "You use the ``scrapy`` tool from inside your projects to control and manage them."
msgstr ""

#: ../../topics/commands.rst:152
msgid "For example, to create a new spider::"
msgstr ""

#: ../../topics/commands.rst:156
msgid "Some Scrapy commands (like :command:`crawl`) must be run from inside a Scrapy project. See the :ref:`commands reference <topics-commands-ref>` below for more information on which commands must be run from inside projects, and which not."
msgstr ""

#: ../../topics/commands.rst:160
msgid "Also keep in mind that some commands may have slightly different behaviours when running them from inside projects. For example, the fetch command will use spider-overridden behaviours (such as the ``user_agent`` attribute to override the user-agent) if the url being fetched is associated with some specific spider. This is intentional, as the ``fetch`` command is meant to be used to check how spiders are downloading pages."
msgstr ""

#: ../../topics/commands.rst:170
msgid "Available tool commands"
msgstr ""

#: ../../topics/commands.rst:172
msgid "This section contains a list of the available built-in commands with a description and some usage examples. Remember, you can always get more info about each command by running::"
msgstr ""

#: ../../topics/commands.rst:178
msgid "And you can see all available commands with::"
msgstr ""

#: ../../topics/commands.rst:182
msgid "There are two kinds of commands, those that only work from inside a Scrapy project (Project-specific commands) and those that also work without an active Scrapy project (Global commands), though they may behave slightly different when running from inside a project (as they would use the project overridden settings)."
msgstr ""

#: ../../topics/commands.rst:188
msgid "Global commands:"
msgstr ""

#: ../../topics/commands.rst:190
msgid ":command:`startproject`"
msgstr ""

#: ../../topics/commands.rst:191
msgid ":command:`genspider`"
msgstr ""

#: ../../topics/commands.rst:192
msgid ":command:`settings`"
msgstr ""

#: ../../topics/commands.rst:193
msgid ":command:`runspider`"
msgstr ""

#: ../../topics/commands.rst:194
msgid ":command:`shell`"
msgstr ""

#: ../../topics/commands.rst:195
msgid ":command:`fetch`"
msgstr ""

#: ../../topics/commands.rst:196
msgid ":command:`view`"
msgstr ""

#: ../../topics/commands.rst:197
msgid ":command:`version`"
msgstr ""

#: ../../topics/commands.rst:199
msgid "Project-only commands:"
msgstr ""

#: ../../topics/commands.rst:201
msgid ":command:`crawl`"
msgstr ""

#: ../../topics/commands.rst:202
msgid ":command:`check`"
msgstr ""

#: ../../topics/commands.rst:203
msgid ":command:`list`"
msgstr ""

#: ../../topics/commands.rst:204
msgid ":command:`edit`"
msgstr ""

#: ../../topics/commands.rst:205
msgid ":command:`parse`"
msgstr ""

#: ../../topics/commands.rst:206
msgid ":command:`bench`"
msgstr ""

#: ../../topics/commands.rst:211
msgid "startproject"
msgstr ""

#: ../../topics/commands.rst:213
msgid "Syntax: ``scrapy startproject <project_name> [project_dir]``"
msgstr ""

#: ../../topics/commands.rst:214
#: ../../topics/commands.rst:230
#: ../../topics/commands.rst:339
#: ../../topics/commands.rst:383
#: ../../topics/commands.rst:406
#: ../../topics/commands.rst:505
#: ../../topics/commands.rst:525
#: ../../topics/commands.rst:541
#: ../../topics/commands.rst:554
msgid "Requires project: *no*"
msgstr ""

#: ../../topics/commands.rst:216
msgid "Creates a new Scrapy project named ``project_name``, under the ``project_dir`` directory. If ``project_dir`` wasn't specified, ``project_dir`` will be the same as ``project_name``."
msgstr ""

#: ../../topics/commands.rst:220
#: ../../topics/commands.rst:234
#: ../../topics/commands.rst:308
#: ../../topics/commands.rst:329
#: ../../topics/commands.rst:395
#: ../../topics/commands.rst:423
#: ../../topics/commands.rst:484
msgid "Usage example::"
msgstr ""

#: ../../topics/commands.rst:227
msgid "genspider"
msgstr ""

#: ../../topics/commands.rst:229
msgid "Syntax: ``scrapy genspider [-t template] <name> <domain>``"
msgstr ""

#: ../../topics/commands.rst:232
msgid "Create a new spider in the current folder or in the current project's ``spiders`` folder, if called from inside a project. The ``<name>`` parameter is set as the spider's ``name``, while ``<domain>`` is used to generate the ``allowed_domains`` and ``start_urls`` spider's attributes."
msgstr ""

#: ../../topics/commands.rst:249
msgid "This is just a convenience shortcut command for creating spiders based on pre-defined templates, but certainly not the only way to create spiders. You can just create the spider source code files yourself, instead of using this command."
msgstr ""

#: ../../topics/commands.rst:257
msgid "crawl"
msgstr ""

#: ../../topics/commands.rst:259
msgid "Syntax: ``scrapy crawl <spider>``"
msgstr ""

#: ../../topics/commands.rst:260
#: ../../topics/commands.rst:276
#: ../../topics/commands.rst:303
#: ../../topics/commands.rst:320
#: ../../topics/commands.rst:447
msgid "Requires project: *yes*"
msgstr ""

#: ../../topics/commands.rst:262
msgid "Start crawling using a spider."
msgstr ""

#: ../../topics/commands.rst:264
#: ../../topics/commands.rst:280
#: ../../topics/commands.rst:361
msgid "Usage examples::"
msgstr ""

#: ../../topics/commands.rst:273
msgid "check"
msgstr ""

#: ../../topics/commands.rst:275
msgid "Syntax: ``scrapy check [-l] <spider>``"
msgstr ""

#: ../../topics/commands.rst:278
msgid "Run contract checks."
msgstr ""

#: ../../topics/commands.rst:300
msgid "list"
msgstr ""

#: ../../topics/commands.rst:302
msgid "Syntax: ``scrapy list``"
msgstr ""

#: ../../topics/commands.rst:305
msgid "List all available spiders in the current project. The output is one spider per line."
msgstr ""

#: ../../topics/commands.rst:317
msgid "edit"
msgstr ""

#: ../../topics/commands.rst:319
msgid "Syntax: ``scrapy edit <spider>``"
msgstr ""

#: ../../topics/commands.rst:322
msgid "Edit the given spider using the editor defined in the ``EDITOR`` environment variable or (if unset) the :setting:`EDITOR` setting."
msgstr ""

#: ../../topics/commands.rst:325
msgid "This command is provided only as a convenience shortcut for the most common case, the developer is of course free to choose any tool or IDE to write and debug spiders."
msgstr ""

#: ../../topics/commands.rst:336
msgid "fetch"
msgstr ""

#: ../../topics/commands.rst:338
msgid "Syntax: ``scrapy fetch <url>``"
msgstr ""

#: ../../topics/commands.rst:341
msgid "Downloads the given URL using the Scrapy downloader and writes the contents to standard output."
msgstr ""

#: ../../topics/commands.rst:344
msgid "The interesting thing about this command is that it fetches the page how the spider would download it. For example, if the spider has a ``USER_AGENT`` attribute which overrides the User Agent, it will use that one."
msgstr ""

#: ../../topics/commands.rst:348
msgid "So this command can be used to \"see\" how your spider would fetch a certain page."
msgstr ""

#: ../../topics/commands.rst:350
msgid "If used outside a project, no particular per-spider behaviour would be applied and it will just use the default Scrapy downloader settings."
msgstr ""

#: ../../topics/commands.rst:353
#: ../../topics/commands.rst:389
#: ../../topics/commands.rst:413
#: ../../topics/commands.rst:452
msgid "Supported options:"
msgstr ""

#: ../../topics/commands.rst:355
#: ../../topics/commands.rst:391
#: ../../topics/commands.rst:415
#: ../../topics/commands.rst:454
msgid "``--spider=SPIDER``: bypass spider autodetection and force use of specific spider"
msgstr ""

#: ../../topics/commands.rst:357
msgid "``--headers``: print the response's HTTP headers instead of the response's body"
msgstr ""

#: ../../topics/commands.rst:359
#: ../../topics/commands.rst:393
msgid "``--no-redirect``: do not follow HTTP 3xx redirects (default is to follow them)"
msgstr ""

#: ../../topics/commands.rst:380
msgid "view"
msgstr ""

#: ../../topics/commands.rst:382
msgid "Syntax: ``scrapy view <url>``"
msgstr ""

#: ../../topics/commands.rst:385
msgid "Opens the given URL in a browser, as your Scrapy spider would \"see\" it. Sometimes spiders see pages differently from regular users, so this can be used to check what the spider \"sees\" and confirm it's what you expect."
msgstr ""

#: ../../topics/commands.rst:403
msgid "shell"
msgstr ""

#: ../../topics/commands.rst:405
msgid "Syntax: ``scrapy shell [url]``"
msgstr ""

#: ../../topics/commands.rst:408
msgid "Starts the Scrapy shell for the given URL (if given) or empty if no URL is given. Also supports UNIX-style local file paths, either relative with ``./`` or ``../`` prefixes or absolute file paths. See :ref:`topics-shell` for more info."
msgstr ""

#: ../../topics/commands.rst:417
msgid "``-c code``: evaluate the code in the shell, print the result and exit"
msgstr ""

#: ../../topics/commands.rst:419
msgid "``--no-redirect``: do not follow HTTP 3xx redirects (default is to follow them); this only affects the URL you may pass as argument on the command line; once you are inside the shell, ``fetch(url)`` will still follow HTTP redirects by default."
msgstr ""

#: ../../topics/commands.rst:444
msgid "parse"
msgstr ""

#: ../../topics/commands.rst:446
msgid "Syntax: ``scrapy parse <url> [options]``"
msgstr ""

#: ../../topics/commands.rst:449
msgid "Fetches the given URL and parses it with the spider that handles it, using the method passed with the ``--callback`` option, or ``parse`` if not given."
msgstr ""

#: ../../topics/commands.rst:456
msgid "``--a NAME=VALUE``: set spider argument (may be repeated)"
msgstr ""

#: ../../topics/commands.rst:458
msgid "``--callback`` or ``-c``: spider method to use as callback for parsing the response"
msgstr ""

#: ../../topics/commands.rst:461
msgid "``--meta`` or ``-m``: additional request meta that will be passed to the callback request. This must be a valid json string. Example: --meta='{\"foo\" : \"bar\"}'"
msgstr ""

#: ../../topics/commands.rst:464
msgid "``--cbkwargs``: additional keyword arguments that will be passed to the callback. This must be a valid json string. Example: --cbkwargs='{\"foo\" : \"bar\"}'"
msgstr ""

#: ../../topics/commands.rst:467
msgid "``--pipelines``: process items through pipelines"
msgstr ""

#: ../../topics/commands.rst:469
msgid "``--rules`` or ``-r``: use :class:`~scrapy.spiders.CrawlSpider` rules to discover the callback (i.e. spider method) to use for parsing the response"
msgstr ""

#: ../../topics/commands.rst:473
msgid "``--noitems``: don't show scraped items"
msgstr ""

#: ../../topics/commands.rst:475
msgid "``--nolinks``: don't show extracted links"
msgstr ""

#: ../../topics/commands.rst:477
msgid "``--nocolour``: avoid using pygments to colorize the output"
msgstr ""

#: ../../topics/commands.rst:479
msgid "``--depth`` or ``-d``: depth level for which the requests should be followed recursively (default: 1)"
msgstr ""

#: ../../topics/commands.rst:482
msgid "``--verbose`` or ``-v``: display information for each depth level"
msgstr ""

#: ../../topics/commands.rst:502
msgid "settings"
msgstr ""

#: ../../topics/commands.rst:504
msgid "Syntax: ``scrapy settings [options]``"
msgstr ""

#: ../../topics/commands.rst:507
msgid "Get the value of a Scrapy setting."
msgstr ""

#: ../../topics/commands.rst:509
msgid "If used inside a project it'll show the project setting value, otherwise it'll show the default Scrapy value for that setting."
msgstr ""

#: ../../topics/commands.rst:512
#: ../../topics/commands.rst:530
msgid "Example usage::"
msgstr ""

#: ../../topics/commands.rst:522
msgid "runspider"
msgstr ""

#: ../../topics/commands.rst:524
msgid "Syntax: ``scrapy runspider <spider_file.py>``"
msgstr ""

#: ../../topics/commands.rst:527
msgid "Run a spider self-contained in a Python file, without having to create a project."
msgstr ""

#: ../../topics/commands.rst:538
msgid "version"
msgstr ""

#: ../../topics/commands.rst:540
msgid "Syntax: ``scrapy version [-v]``"
msgstr ""

#: ../../topics/commands.rst:543
msgid "Prints the Scrapy version. If used with ``-v`` it also prints Python, Twisted and Platform info, which is useful for bug reports."
msgstr ""

#: ../../topics/commands.rst:549
msgid "bench"
msgstr ""

#: ../../topics/commands.rst:553
msgid "Syntax: ``scrapy bench``"
msgstr ""

#: ../../topics/commands.rst:556
msgid "Run a quick benchmark test. :ref:`benchmarking`."
msgstr ""

#: ../../topics/commands.rst:559
msgid "Custom project commands"
msgstr ""

#: ../../topics/commands.rst:561
msgid "You can also add your custom project commands by using the :setting:`COMMANDS_MODULE` setting. See the Scrapy commands in `scrapy/commands`_ for examples on how to implement your commands."
msgstr ""

#: ../../topics/commands.rst:569
msgid "COMMANDS_MODULE"
msgstr ""

#: ../../topics/commands.rst:571
msgid "Default: ``''`` (empty string)"
msgstr ""

#: ../../topics/commands.rst:573
msgid "A module to use for looking up custom Scrapy commands. This is used to add custom commands for your Scrapy project."
msgstr ""

#: ../../topics/commands.rst:576
msgid "Example::"
msgstr ""

#: ../../topics/commands.rst:583
msgid "Register commands via setup.py entry points"
msgstr ""

#: ../../topics/commands.rst:585
msgid "This is an experimental feature, use with caution."
msgstr ""

#: ../../topics/commands.rst:587
msgid "You can also add Scrapy commands from an external library by adding a ``scrapy.commands`` section in the entry points of the library ``setup.py`` file."
msgstr ""

#: ../../topics/commands.rst:591
msgid "The following example adds ``my_command`` command::"
msgstr ""

