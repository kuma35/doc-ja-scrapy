# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008â€“2018, Scrapy developers
# This file is distributed under the same license as the Scrapy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Scrapy \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-09-10 09:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../topics/extensions.rst:5
msgid "Extensions"
msgstr ""

#: ../../topics/extensions.rst:7
msgid "The extensions framework provides a mechanism for inserting your own custom functionality into Scrapy."
msgstr ""

#: ../../topics/extensions.rst:10
msgid "Extensions are just regular classes that are instantiated at Scrapy startup, when extensions are initialized."
msgstr ""

#: ../../topics/extensions.rst:14
msgid "Extension settings"
msgstr ""

#: ../../topics/extensions.rst:16
msgid "Extensions use the :ref:`Scrapy settings <topics-settings>` to manage their settings, just like any other Scrapy code."
msgstr ""

#: ../../topics/extensions.rst:19
msgid "It is customary for extensions to prefix their settings with their own name, to avoid collision with existing (and future) extensions. For example, a hypothetic extension to handle `Google Sitemaps`_ would use settings like ``GOOGLESITEMAP_ENABLED``, ``GOOGLESITEMAP_DEPTH``, and so on."
msgstr ""

#: ../../topics/extensions.rst:27
msgid "Loading & activating extensions"
msgstr ""

#: ../../topics/extensions.rst:29
msgid "Extensions are loaded and activated at startup by instantiating a single instance of the extension class. Therefore, all the extension initialization code must be performed in the class constructor (``__init__`` method)."
msgstr ""

#: ../../topics/extensions.rst:33
msgid "To make an extension available, add it to the :setting:`EXTENSIONS` setting in your Scrapy settings. In :setting:`EXTENSIONS`, each extension is represented by a string: the full Python path to the extension's class name. For example::"
msgstr ""

#: ../../topics/extensions.rst:43
msgid "As you can see, the :setting:`EXTENSIONS` setting is a dict where the keys are the extension paths, and their values are the orders, which define the extension *loading* order. The :setting:`EXTENSIONS` setting is merged with the :setting:`EXTENSIONS_BASE` setting defined in Scrapy (and not meant to be overridden) and then sorted by order to get the final sorted list of enabled extensions."
msgstr ""

#: ../../topics/extensions.rst:50
msgid "As extensions typically do not depend on each other, their loading order is irrelevant in most cases. This is why the :setting:`EXTENSIONS_BASE` setting defines all extensions with the same order (``0``). However, this feature can be exploited if you need to add an extension which depends on other extensions already loaded."
msgstr ""

#: ../../topics/extensions.rst:57
msgid "Available, enabled and disabled extensions"
msgstr ""

#: ../../topics/extensions.rst:59
msgid "Not all available extensions will be enabled. Some of them usually depend on a particular setting. For example, the HTTP Cache extension is available by default but disabled unless the :setting:`HTTPCACHE_ENABLED` setting is set."
msgstr ""

#: ../../topics/extensions.rst:64
msgid "Disabling an extension"
msgstr ""

#: ../../topics/extensions.rst:66
msgid "In order to disable an extension that comes enabled by default (ie. those included in the :setting:`EXTENSIONS_BASE` setting) you must set its order to ``None``. For example::"
msgstr ""

#: ../../topics/extensions.rst:75
msgid "Writing your own extension"
msgstr ""

#: ../../topics/extensions.rst:77
msgid "Each extension is a Python class. The main entry point for a Scrapy extension (this also includes middlewares and pipelines) is the ``from_crawler`` class method which receives a ``Crawler`` instance. Through the Crawler object you can access settings, signals, stats, and also control the crawling behaviour."
msgstr ""

#: ../../topics/extensions.rst:82
msgid "Typically, extensions connect to :ref:`signals <topics-signals>` and perform tasks triggered by them."
msgstr ""

#: ../../topics/extensions.rst:85
msgid "Finally, if the ``from_crawler`` method raises the :exc:`~scrapy.exceptions.NotConfigured` exception, the extension will be disabled. Otherwise, the extension will be enabled."
msgstr ""

#: ../../topics/extensions.rst:90
msgid "Sample extension"
msgstr ""

#: ../../topics/extensions.rst:92
msgid "Here we will implement a simple extension to illustrate the concepts described in the previous section. This extension will log a message every time:"
msgstr ""

#: ../../topics/extensions.rst:95
msgid "a spider is opened"
msgstr ""

#: ../../topics/extensions.rst:96
msgid "a spider is closed"
msgstr ""

#: ../../topics/extensions.rst:97
msgid "a specific number of items are scraped"
msgstr ""

#: ../../topics/extensions.rst:99
msgid "The extension will be enabled through the ``MYEXT_ENABLED`` setting and the number of items will be specified through the ``MYEXT_ITEMCOUNT`` setting."
msgstr ""

#: ../../topics/extensions.rst:102
msgid "Here is the code of such extension::"
msgstr ""

#: ../../topics/extensions.rst:152
msgid "Built-in extensions reference"
msgstr ""

#: ../../topics/extensions.rst:155
msgid "General purpose extensions"
msgstr ""

#: ../../topics/extensions.rst:158
msgid "Log Stats extension"
msgstr ""

#: ../../topics/extensions.rst:165
msgid "Log basic stats like crawled pages and scraped items."
msgstr ""

#: ../../topics/extensions.rst:168
msgid "Core Stats extension"
msgstr ""

#: ../../topics/extensions.rst:175
msgid "Enable the collection of core statistics, provided the stats collection is enabled (see :ref:`topics-stats`)."
msgstr ""

#: ../../topics/extensions.rst:181
msgid "Telnet console extension"
msgstr ""

#: ../../topics/extensions.rst:188
msgid "Provides a telnet console for getting into a Python interpreter inside the currently running Scrapy process, which can be very useful for debugging."
msgstr ""

#: ../../topics/extensions.rst:191
msgid "The telnet console must be enabled by the :setting:`TELNETCONSOLE_ENABLED` setting, and the server will listen in the port specified in :setting:`TELNETCONSOLE_PORT`."
msgstr ""

#: ../../topics/extensions.rst:198
msgid "Memory usage extension"
msgstr ""

#: ../../topics/extensions.rst:205
msgid "This extension does not work in Windows."
msgstr ""

#: ../../topics/extensions.rst:207
msgid "Monitors the memory used by the Scrapy process that runs the spider and:"
msgstr ""

#: ../../topics/extensions.rst:209
msgid "sends a notification e-mail when it exceeds a certain value"
msgstr ""

#: ../../topics/extensions.rst:210
msgid "closes the spider when it exceeds a certain value"
msgstr ""

#: ../../topics/extensions.rst:212
msgid "The notification e-mails can be triggered when a certain warning value is reached (:setting:`MEMUSAGE_WARNING_MB`) and when the maximum value is reached (:setting:`MEMUSAGE_LIMIT_MB`) which will also cause the spider to be closed and the Scrapy process to be terminated."
msgstr ""

#: ../../topics/extensions.rst:217
msgid "This extension is enabled by the :setting:`MEMUSAGE_ENABLED` setting and can be configured with the following settings:"
msgstr ""

#: ../../topics/extensions.rst:220
msgid ":setting:`MEMUSAGE_LIMIT_MB`"
msgstr ""

#: ../../topics/extensions.rst:221
msgid ":setting:`MEMUSAGE_WARNING_MB`"
msgstr ""

#: ../../topics/extensions.rst:222
msgid ":setting:`MEMUSAGE_NOTIFY_MAIL`"
msgstr ""

#: ../../topics/extensions.rst:223
msgid ":setting:`MEMUSAGE_CHECK_INTERVAL_SECONDS`"
msgstr ""

#: ../../topics/extensions.rst:226
msgid "Memory debugger extension"
msgstr ""

#: ../../topics/extensions.rst:233
msgid "An extension for debugging memory usage. It collects information about:"
msgstr ""

#: ../../topics/extensions.rst:235
msgid "objects uncollected by the Python garbage collector"
msgstr ""

#: ../../topics/extensions.rst:236
msgid "objects left alive that shouldn't. For more info, see :ref:`topics-leaks-trackrefs`"
msgstr ""

#: ../../topics/extensions.rst:238
msgid "To enable this extension, turn on the :setting:`MEMDEBUG_ENABLED` setting. The info will be stored in the stats."
msgstr ""

#: ../../topics/extensions.rst:242
msgid "Close spider extension"
msgstr ""

#: ../../topics/extensions.rst:249
msgid "Closes a spider automatically when some conditions are met, using a specific closing reason for each condition."
msgstr ""

#: ../../topics/extensions.rst:252
msgid "The conditions for closing a spider can be configured through the following settings:"
msgstr ""

#: ../../topics/extensions.rst:255
msgid ":setting:`CLOSESPIDER_TIMEOUT`"
msgstr ""

#: ../../topics/extensions.rst:256
msgid ":setting:`CLOSESPIDER_ITEMCOUNT`"
msgstr ""

#: ../../topics/extensions.rst:257
msgid ":setting:`CLOSESPIDER_PAGECOUNT`"
msgstr ""

#: ../../topics/extensions.rst:258
msgid ":setting:`CLOSESPIDER_ERRORCOUNT`"
msgstr ""

#: ../../topics/extensions.rst:263
msgid "CLOSESPIDER_TIMEOUT"
msgstr ""

#: ../../topics/extensions.rst:265
#: ../../topics/extensions.rst:277
#: ../../topics/extensions.rst:293
#: ../../topics/extensions.rst:307
msgid "Default: ``0``"
msgstr ""

#: ../../topics/extensions.rst:267
msgid "An integer which specifies a number of seconds. If the spider remains open for more than that number of second, it will be automatically closed with the reason ``closespider_timeout``. If zero (or non set), spiders won't be closed by timeout."
msgstr ""

#: ../../topics/extensions.rst:275
msgid "CLOSESPIDER_ITEMCOUNT"
msgstr ""

#: ../../topics/extensions.rst:279
msgid "An integer which specifies a number of items. If the spider scrapes more than that amount and those items are passed by the item pipeline, the spider will be closed with the reason ``closespider_itemcount``. Requests which  are currently in the downloader queue (up to :setting:`CONCURRENT_REQUESTS` requests) are still processed. If zero (or non set), spiders won't be closed by number of passed items."
msgstr ""

#: ../../topics/extensions.rst:289
msgid "CLOSESPIDER_PAGECOUNT"
msgstr ""

#: ../../topics/extensions.rst:295
msgid "An integer which specifies the maximum number of responses to crawl. If the spider crawls more than that, the spider will be closed with the reason ``closespider_pagecount``. If zero (or non set), spiders won't be closed by number of crawled responses."
msgstr ""

#: ../../topics/extensions.rst:303
msgid "CLOSESPIDER_ERRORCOUNT"
msgstr ""

#: ../../topics/extensions.rst:309
msgid "An integer which specifies the maximum number of errors to receive before closing the spider. If the spider generates more than that number of errors, it will be closed with the reason ``closespider_errorcount``. If zero (or non set), spiders won't be closed by number of errors."
msgstr ""

#: ../../topics/extensions.rst:315
msgid "StatsMailer extension"
msgstr ""

#: ../../topics/extensions.rst:322
msgid "This simple extension can be used to send a notification e-mail every time a domain has finished scraping, including the Scrapy stats collected. The email will be sent to all recipients specified in the :setting:`STATSMAILER_RCPTS` setting."
msgstr ""

#: ../../topics/extensions.rst:331
msgid "Debugging extensions"
msgstr ""

#: ../../topics/extensions.rst:334
msgid "Stack trace dump extension"
msgstr ""

#: ../../topics/extensions.rst:338
msgid "Dumps information about the running process when a `SIGQUIT`_ or `SIGUSR2`_ signal is received. The information dumped is the following:"
msgstr ""

#: ../../topics/extensions.rst:341
msgid "engine status (using ``scrapy.utils.engine.get_engine_status()``)"
msgstr ""

#: ../../topics/extensions.rst:342
msgid "live references (see :ref:`topics-leaks-trackrefs`)"
msgstr ""

#: ../../topics/extensions.rst:343
msgid "stack trace of all threads"
msgstr ""

#: ../../topics/extensions.rst:345
msgid "After the stack trace and engine status is dumped, the Scrapy process continues running normally."
msgstr ""

#: ../../topics/extensions.rst:348
msgid "This extension only works on POSIX-compliant platforms (ie. not Windows), because the `SIGQUIT`_ and `SIGUSR2`_ signals are not available on Windows."
msgstr ""

#: ../../topics/extensions.rst:351
msgid "There are at least two ways to send Scrapy the `SIGQUIT`_ signal:"
msgstr ""

#: ../../topics/extensions.rst:353
msgid "By pressing Ctrl-\\ while a Scrapy process is running (Linux only?)"
msgstr ""

#: ../../topics/extensions.rst:354
msgid "By running this command (assuming ``<pid>`` is the process id of the Scrapy process)::"
msgstr ""

#: ../../topics/extensions.rst:363
msgid "Debugger extension"
msgstr ""

#: ../../topics/extensions.rst:367
msgid "Invokes a `Python debugger`_ inside a running Scrapy process when a `SIGUSR2`_ signal is received. After the debugger is exited, the Scrapy process continues running normally."
msgstr ""

#: ../../topics/extensions.rst:371
msgid "For more info see `Debugging in Python`_."
msgstr ""

#: ../../topics/extensions.rst:373
msgid "This extension only works on POSIX-compliant platforms (ie. not Windows)."
msgstr ""

